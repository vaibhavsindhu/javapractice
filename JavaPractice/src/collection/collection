Utility classes:

1: Collection (C):
This class have several methods used in different collection objects
 -- sorting, searching, synchronized




Queue:
If we want to represent a group of individual objects prior to processing then we should go for queue
ex.. before sending sms we have to store all mobile numbers in some DS
In which order we store numbers in the same order they will be delivered.. for this FIFO requirement queue is the best choice
-- Usually queue follows FIFO we based on our requirement we can implement our own priority order also (priority queue)
-- from 1.5 version onwards Linked list class implements queue interface..linked list based implementation queue always follow FIFO

Implementation classes for Queue interface

1: Priority queue
2: Blocking queue
        a: priority BQ
        b: Linked BQ

Queue interface specific methods
    offer();
    poll();     //remove and return head element.. if queue is empty returns null
    remove();   //remove and return head element.. if queue is empty returns noSuchElementException
    peek();     //return head element.. if queue is empty returns null
    element();  //return head element.. if queue is empty returns noSuchElementException

1: Priority Queue (C)
    represent elements based on some priority


